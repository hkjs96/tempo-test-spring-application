spring:
  application:
    name: user
  datasource:
    url: jdbc:h2:mem:userdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false
  redis:
    host: localhost
    port: 6379
    password: ""
    timeout: 3000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: -1

server:
  port: 8084
  ssl:
    enabled: false  # 프로덕션 환경에서는 true로 설정
    key-store: ""
    key-store-password: ""
    key-store-type: PKCS12

jwt:
  secret: "tempoDemoProjectSecretKey123456789012345678901234567890"
  access-token-validity-in-seconds: 3600  # 1시간
  refresh-token-validity-in-seconds: 604800  # 7일

security:
  require-ssl: false  # 프로덕션 환경에서는 true로 설정
  headers:
    frame-options: DENY
    xss-protection: 1; mode=block
    content-security-policy: "default-src 'self'"
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    max-age: 3600

# OpenTelemetry 설정
otel:
  traces:
    exporter: otlp
  metrics:
    exporter: otlp
  logs:
    exporter: otlp
  exporter:
    otlp:
      endpoint: http://localhost:4317
      protocol: grpc
  springboot:
    enabled: true
  instrumentation:
    spring-webmvc:
      enabled: true
    spring-webflux:
      enabled: true
    jdbc:
      enabled: false

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [trace=%X{traceId:-},span=%X{spanId:-}] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com.tempo.user: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
